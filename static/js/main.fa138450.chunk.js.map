{"version":3,"sources":["components/Header.js","components/NameTitleEditMode.js","components/NameTitleDisplayMode.js","components/EditButton.js","components/SubmitButton.js","components/NameTitle.js","components/ProfileDescriptionEditMode.js","components/ProfileDescriptionDisplayMode.js","components/ProfileDescription.js","components/DeleteButton.js","components/AddButton.js","components/EducationEditMode.js","components/EducationDisplayMode.js","components/Education.js","components/ExpertiseEditMode.js","components/ExpertiseDisplayMode.js","components/Expertise.js","components/ContactInformationEditMode.js","components/ContactInformationDisplayMode.js","components/ContactInformation.js","components/ProfessionalExperienceEditMode.js","components/ProfessionalExperienceDisplayMode.js","components/ProfessionalExperience.js","components/ProfilePictureEditMode.js","components/ProfilePictureDisplayMode.js","images/profile-pic-example.svg","components/ProfilePicture.js","components/ToggleButton.js","components/ToggleButtonText.js","components/PrintCvButton.js","App.js","index.js"],"names":["Header","props","className","NameTitleEditMode","onSubmit","e","onSubmitFormHandleSubmit","inputFields","map","inputField","index","htmlFor","type","name","id","value","inputName","onChange","onChangeInput","inputTitle","NameTitleDisplayMode","EditButton","onClick","SubmitButton","NameTitle","handleChangeInput","values","state","target","setState","handleSubmit","preventDefault","handleEditModeClick","bind","handleDisplayModeClick","isInEditMode","this","renderingMode","button","isInCvEditMode","React","Component","ProfileDescriptionEditMode","inputProfileDescription","ProfileDescriptionDisplayMode","ProfileDescription","DeleteButton","onClickHandleRemoveFields","onClickHandleAddFields","EducationEditMode","inputStudy","inputSchool","inputDateStudy","EducationDisplayMode","Education","handleAddFields","concat","handleRemoveFields","splice","ExpertiseEditMode","inputExpertise","ExpertiseDisplayMode","Expertise","EducationalExperienceEditMode","inputPhone","inputMail","inputLocation","inputLinkedIn","ContactInformationDisplayMode","ContactInformation","ContactInformationEditMode","ProfessionalExperienceEditMode","inputJobTitle","inputCompany","inputJobLocation","inputJobDate","inputJobDescription","ProfessionalExperienceDisplayMode","ProfessionalExperience","ProfilePictureEditMode","ProfilePictureDisplayMode","style","backgroundImage","inputProfilePicture","ProfilePicture","URL","createObjectURL","files","ExamplePicture","ToggleButton","changeToggleButtonState","ToggleButtonText","PrintCvButton","printCv","App","handleCvEditModeClick","handleCvDisplayModeClick","isToggled","Promise","resolve","reject","then","window","print","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa138450.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Header.scss\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n        React CV Builder\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst NameTitleEditMode = (props) => {\n  return (\n    <div className=\"component component-edit-mode-nametitle\">\n      <form onSubmit={e => props.onSubmitFormHandleSubmit(e)}>\n        <div className=\"component-header-edit-mode component-header-edit-mode-left\">Heading</div>\n        {props.inputFields.map((inputField, index) => (\n          <div key={index}>\n            <label htmlFor={\"name\"+index}>Name</label>\n            <input type=\"text\" name=\"inputName\" id={\"name\"+index} value={inputField.inputName} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"title\"+index}>Profession</label>\n            <input type=\"text\" name=\"inputTitle\" id={\"title\"+index} value={inputField.inputTitle} onChange={e => props.onChangeInput(index, e)}></input>\n          </div>\n        ))}\n      </form>\n    </div>\n  );\n};\n\nexport default NameTitleEditMode;\n","import React from \"react\";\n\nconst NameTitleDisplayMode = (props) => {\n  return (\n    <div className=\"component component-name-title\">\n      <div className=\"component-props\">\n        {props.inputFields.map((inputField, index) => (\n          <div key={index} className=\"props-value-name-title\">\n            <div className=\"props-value props-value-name-title-inputname\">{inputField.inputName}</div>\n            <div className=\"props-value props-value-name-title-inputtitle\">{inputField.inputTitle}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default NameTitleDisplayMode;\n","import React from \"react\";\nimport \"../styles/EditButton.scss\";\n\nconst EditButton = (props) => {\n  return (\n      <i className=\"fas fa-edit edit-icon\" onClick={props.onClick}></i>\n  );\n};\n\nexport default EditButton;\n","import React from \"react\";\nimport \"../styles/SubmitButton.scss\";\n\nconst SubmitButton = (props) => {\n  return (\n    <button className=\"submit-button\" onClick={props.onClick}>\n      Submit\n    </button>\n  );\n};\n\nexport default SubmitButton;\n","import React from \"react\";\nimport NameTitleEditMode from \"./NameTitleEditMode\";\nimport NameTitleDisplayMode from \"./NameTitleDisplayMode\";\nimport EditButton from \"./EditButton\";\nimport SubmitButton from \"./SubmitButton\";\nimport \"../styles/NameTitle.scss\";\n\nclass NameTitle extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleEditModeClick = this.handleEditModeClick.bind(this);\n    this.handleDisplayModeClick = this.handleDisplayModeClick.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      isInEditMode: true,\n      inputFields: [\n        {\n          inputName: \"\",\n          inputTitle: \"\",\n        },\n      ],\n    };\n  }       \n          \n  handleEditModeClick() {\n    this.setState({isInEditMode: false});\n  }\n\n  handleDisplayModeClick() {\n    this.setState({isInEditMode: true});\n  }\n\n  handleChangeInput = (index, e) => {\n    const values = [...this.state.inputFields];\n    // Change the inputFields object key value to the input value\n    values[index][e.target.name] = e.target.value;\n    this.setState({\n      values\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  };\n          \n  render() {\n    const isInEditMode = this.state.isInEditMode;\n    let renderingMode;\n    let button;\n    // show edit mode only when the component and cv are in edit mode\n    if (isInEditMode && this.props.isInCvEditMode) {\n      renderingMode = <NameTitleEditMode \n        onSubmitFormHandleSubmit={this.handleSubmit}\n        inputFields={this.state.inputFields}\n        onChangeInput={this.handleChangeInput}\n      />\n      button = <SubmitButton onClick={this.handleEditModeClick} />\n    } else {\n      renderingMode = <NameTitleDisplayMode \n        inputFields={this.state.inputFields}\n      />\n      button = <EditButton onClick={this.handleDisplayModeClick} />\n    }\n\n    return (\n      <div>\n        <div className=\"component-item\">\n          {renderingMode}\n          {this.props.isInCvEditMode && button}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NameTitle;\n","import React from \"react\";\n\nconst ProfileDescriptionEditMode = (props) => {\n  return (\n    <div className=\"component\">\n      <form onSubmit={e => props.onSubmitFormHandleSubmit(e)}>\n        {props.inputFields.map((inputField, index) => (\n          <div key={index}>\n            <label  className=\"component-header-edit-mode component-header-edit-mode-left\" htmlFor={\"profile-description\"+index}>Profile</label>\n            <textarea name=\"inputProfileDescription\" id={\"profile-description\"+index} value={inputField.inputProfileDescription} onChange={e => props.onChangeInput(index, e)}></textarea>\n          </div>\n        ))}\n      </form>\n    </div>\n  );\n};\n\nexport default ProfileDescriptionEditMode;\n","import React from \"react\";\n\nconst ProfileDescriptionDisplayMode = (props) => {\n  return (\n    <div className=\"component\">\n      <div className=\"component-header-display-mode component-header-display-mode-left\">Profile</div>\n      <div className=\"component-props\">\n        {props.inputFields.map((inputField, index) => (\n          <div key={index}>\n            <div className=\"props-value props-value-profile-description\">{inputField.inputProfileDescription}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileDescriptionDisplayMode;\n","import React from \"react\";\nimport ProfileDescriptionEditMode from \"./ProfileDescriptionEditMode\";\nimport ProfileDescriptionDisplayMode from \"./ProfileDescriptionDisplayMode\";\nimport EditButton from \"./EditButton\";\nimport SubmitButton from \"./SubmitButton\";\n\nclass ProfileDescription extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleEditModeClick = this.handleEditModeClick.bind(this);\n    this.handleDisplayModeClick = this.handleDisplayModeClick.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      isInEditMode: true,\n      inputFields: [\n        {\n          inputProfileDescription: \"\",\n        },\n      ],\n    };\n  }       \n          \n  handleEditModeClick() {\n    this.setState({isInEditMode: false});\n  }\n\n  handleDisplayModeClick() {\n    this.setState({isInEditMode: true});\n  }\n\n  handleChangeInput = (index, e) => {\n    const values = [...this.state.inputFields];\n    // Change the inputFields object key value to the input value\n    values[index][e.target.name] = e.target.value;\n    this.setState({\n      values\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  };\n          \n  render() {\n    const isInEditMode = this.state.isInEditMode;\n    let renderingMode;\n    let button;\n    // show edit mode only when the component and cv are in edit mode\n    if (isInEditMode && this.props.isInCvEditMode) {\n      renderingMode = <ProfileDescriptionEditMode \n        onSubmitFormHandleSubmit={this.handleSubmit}\n        inputFields={this.state.inputFields}\n        onChangeInput={this.handleChangeInput}\n      />\n      button = <SubmitButton onClick={this.handleEditModeClick} />\n    } else {\n      renderingMode = <ProfileDescriptionDisplayMode \n        inputFields={this.state.inputFields}\n      />\n      button = <EditButton onClick={this.handleDisplayModeClick} />\n    }\n\n    return (\n      <div>\n        <div className=\"component-item\">\n          {renderingMode}\n          {this.props.isInCvEditMode && button}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProfileDescription;\n","import React from \"react\";\nimport \"../styles/DeleteButton.scss\";\n\nconst DeleteButton = (props) => {\n  return (\n      <i className=\"far fa-window-close delete-icon\" onClick={props.onClickHandleRemoveFields}></i>\n  );\n};\n\nexport default DeleteButton;\n","import React from \"react\";\nimport \"../styles/AddButton.scss\";\n\nconst DeleteButton = (props) => {\n  return (\n    <button className=\"add-button\" onClick={props.onClickHandleAddFields}>Add</button>\n  );\n};\n\nexport default DeleteButton;\n","import React from \"react\";\nimport DeleteButton from \"./DeleteButton\";\nimport AddButton from \"./AddButton\";\n\nconst EducationEditMode = (props) => {\n  return (\n    <div className=\"component\">\n      <form onSubmit={e => props.onSubmitFormHandleSubmit(e)}>\n        <div className=\"component-header-edit-mode\">Education</div>\n        {props.inputFields.map((inputField, index) => (\n          <div key={index} className=\"component-input-wrapper component-input-wrapper-education\">\n            <label htmlFor={\"study\"+index}>Study</label>\n            <input type=\"text\" name=\"inputStudy\" id={\"study\"+index} value={inputField.inputStudy} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"school\"+index}>School</label>\n            <input type=\"text\" name=\"inputSchool\" id={\"school\"+index} value={inputField.inputSchool} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"date-study\"+index}>Date of study</label>\n            <input type=\"text\" name=\"inputDateStudy\" id={\"date-study\"+index} value={inputField.inputDateStudy} onChange={e => props.onChangeInput(index, e)}></input>\n            {props.isInCvEditMode \n              && <DeleteButton onClickHandleRemoveFields={e => props.onClickHandleRemoveFields(index, e)} />\n            }\n          </div>\n        ))}\n        {props.isInCvEditMode \n          && <AddButton onClickHandleAddFields={props.onClickHandleAddFields} />\n        }\n      </form>\n    </div>\n  );\n};\n\nexport default EducationEditMode;\n","import React from \"react\";\n\nconst EducationDisplayMode = (props) => {\n  return (\n    <div className=\"component\">\n      <div className=\"component-header-display-mode\">Education</div>\n      <div className=\"component-props component-props-education\">\n        {props.inputFields.map((inputField, index) => (\n          <div key={index} className=\"education-props-values\">\n            <div className=\"props-value props-value-education-inputstudy\">{inputField.inputStudy}</div>\n            <div className=\"props-value props-value-education-inputschool\">{inputField.inputSchool}</div>\n            <div className=\"props-value props-value-education-inputdatestudy\">{inputField.inputDateStudy}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EducationDisplayMode;\n","import React from \"react\";\nimport EducationEditMode from \"./EducationEditMode\";\nimport EducationDisplayMode from \"./EducationDisplayMode\";\nimport EditButton from \"./EditButton\";\nimport SubmitButton from \"./SubmitButton\";\nimport \"../styles/Education.scss\";\n\nclass Education extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleEditModeClick = this.handleEditModeClick.bind(this);\n    this.handleDisplayModeClick = this.handleDisplayModeClick.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAddFields = this.handleAddFields.bind(this);\n    this.handleRemoveFields = this.handleRemoveFields.bind(this);\n\n    this.state = {\n      isInEditMode: true,\n      inputFields: [\n        {\n          inputSchool: \"\",\n          inputStudy: \"\",\n          inputDateStudy: \"\",\n        },\n      ],\n    };\n  }       \n          \n  handleEditModeClick() {\n    this.setState({isInEditMode: false});\n  }\n\n  handleDisplayModeClick() {\n    this.setState({isInEditMode: true});\n  }\n\n  handleChangeInput = (index, e) => {\n    const values = [...this.state.inputFields];\n    // Change the inputFields object key value to the input value\n    values[index][e.target.name] = e.target.value;\n    this.setState({\n      values\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  handleAddFields = () => {\n    this.setState({\n      inputFields: this.state.inputFields.concat({inputSchool: \"\", inputStudy: \"\", inputDateStudy: \"\"})\n    });\n  };\n\n  handleRemoveFields = (index) => {\n    const values = [...this.state.inputFields];\n    values.splice(index, 1);\n    this.setState({\n      inputFields: values\n    });\n  };\n\n  render() {\n    const isInEditMode = this.state.isInEditMode;\n    let renderingMode;\n    let button;\n    // show edit mode only when the component and cv are in edit mode\n    if (isInEditMode && this.props.isInCvEditMode) {\n      renderingMode = <EducationEditMode \n        onSubmitFormHandleSubmit={this.handleSubmit}\n        inputFields={this.state.inputFields}\n        onChangeInput={this.handleChangeInput}\n        onClickHandleRemoveFields={this.handleRemoveFields}\n        onClickHandleAddFields={this.handleAddFields}\n        isInCvEditMode = {this.props.isInCvEditMode}\n      />\n      button = <SubmitButton onClick={this.handleEditModeClick} />\n    } else {\n      renderingMode = <EducationDisplayMode \n        inputFields={this.state.inputFields}\n      />\n      button = <EditButton onClick={this.handleDisplayModeClick} />\n    }\n\n    return (\n      <div>\n        <div className=\"component-item\">\n          {renderingMode}\n          {this.props.isInCvEditMode && button}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Education;\n","import React from \"react\";\nimport DeleteButton from \"./DeleteButton\";\nimport AddButton from \"./AddButton\";\n\nconst ExpertiseEditMode = (props) => {\n  return (\n    <div className=\"component\">\n      <form onSubmit={e => props.onSubmitFormHandleSubmit(e)}>\n        <div className=\"component-header-edit-mode\">Expertise</div>\n        {props.inputFields.map((inputField, index) => (\n          <div key={index} className=\"component-input-wrapper-expertise\">\n            <input type=\"text\" name=\"inputExpertise\" id={\"expertise\"+index} value={inputField.inputExpertise} onChange={e => props.onChangeInput(index, e)}></input>\n            {props.isInCvEditMode \n              && <DeleteButton onClickHandleRemoveFields={e => props.onClickHandleRemoveFields(index, e)} />\n            }\n          </div>\n        ))}\n        {props.isInCvEditMode\n        && <AddButton onClickHandleAddFields={props.onClickHandleAddFields} />\n        }\n      </form>\n    </div>\n  );\n};\n\nexport default ExpertiseEditMode;\n","import React from \"react\";\n\nconst ExpertiseDisplayMode = (props) => {\n  return (\n    <div className=\"component\">\n      <div className=\"component-header-display-mode\">Expertise</div>\n      <div className=\"component-props\">\n        {props.inputFields.map((inputField, index) => (\n          <div key={index}>\n            <div className=\"props-value props-value-inputexpertise\">{inputField.inputExpertise}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpertiseDisplayMode;\n","import React from \"react\";\nimport ExpertiseEditMode from \"./ExpertiseEditMode\";\nimport ExpertiseDisplayMode from \"./ExpertiseDisplayMode\";\nimport EditButton from \"./EditButton\";\nimport SubmitButton from \"./SubmitButton\";\nimport \"../styles/Expertise.scss\";\n\nclass Expertise extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleEditModeClick = this.handleEditModeClick.bind(this);\n    this.handleDisplayModeClick = this.handleDisplayModeClick.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAddFields = this.handleAddFields.bind(this);\n    this.handleRemoveFields = this.handleRemoveFields.bind(this);\n\n    this.state = {\n      isInEditMode: true,\n      inputFields: [\n        {\n          inputExpertise: \"\",\n        },\n      ],\n    };\n  }       \n          \n  handleEditModeClick() {\n    this.setState({isInEditMode: false});\n  }\n\n  handleDisplayModeClick() {\n    this.setState({isInEditMode: true});\n  }\n\n  handleChangeInput = (index, e) => {\n    const values = [...this.state.inputFields];\n    // Change the inputFields object key value to the input value\n    values[index][e.target.name] = e.target.value;\n    this.setState({\n      values\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  handleAddFields = () => {\n    this.setState({\n      inputFields: this.state.inputFields.concat({inputExpertise: \"\"})\n    });\n  };\n\n  handleRemoveFields = (index) => {\n    const values = [...this.state.inputFields];\n    values.splice(index, 1);\n    this.setState({\n      inputFields: values\n    });\n  };\n          \n  render() {\n    const isInEditMode = this.state.isInEditMode;\n    let renderingMode;\n    let button;\n    // show edit mode only when the component and cv are in edit mode\n    if (isInEditMode && this.props.isInCvEditMode) {\n      renderingMode = <ExpertiseEditMode \n        onSubmitFormHandleSubmit={this.handleSubmit}\n        inputFields={this.state.inputFields}\n        onChangeInput={this.handleChangeInput}\n        onClickHandleRemoveFields={this.handleRemoveFields}\n        onClickHandleAddFields={this.handleAddFields}\n        isInCvEditMode = {this.props.isInCvEditMode}\n      />\n      button = <SubmitButton onClick={this.handleEditModeClick} />\n    } else {\n      renderingMode = <ExpertiseDisplayMode\n        inputFields={this.state.inputFields}\n      />\n      button = <EditButton onClick={this.handleDisplayModeClick} />\n    }\n\n    return (\n      <div>\n        <div className=\"component-item\">\n          {renderingMode}\n          {this.props.isInCvEditMode && button}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Expertise;\n","import React from \"react\";\n\nconst EducationalExperienceEditMode = (props) => {\n  return (\n    <div className=\"component\">\n      <form onSubmit={e => props.onSubmitFormHandleSubmit(e)}>\n        <div className=\"component-header-edit-mode\">Contact</div>\n        {props.inputFields.map((inputField, index) => (\n          <div key={index}>\n            <label htmlFor={\"phone\"+index}>Phone number</label>\n            <input type=\"text\" name=\"inputPhone\" id={\"phone\"+index} value={inputField.inputPhone} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"mail\"+index}>Mail</label>\n            <input type=\"text\" name=\"inputMail\" id={\"mail\"+index} value={inputField.inputMail} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"location\"+index}>Location</label>\n            <input type=\"text\" name=\"inputLocation\" id={\"location\"+index} value={inputField.inputLocation} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"linkedin\"+index}>LinkedIn</label>\n            <input type=\"text\" name=\"inputLinkedIn\" id={\"linkedin\"+index} value={inputField.inputLinkedIn} onChange={e => props.onChangeInput(index, e)}></input>\n          </div>\n        ))}\n      </form>\n    </div>\n  );\n};\n\nexport default EducationalExperienceEditMode;\n","import React from \"react\";\n\nconst ContactInformationDisplayMode = (props) => {\n  return (\n    <div className=\"component\">\n      <div className=\"component-header-display-mode\">Contact</div>\n      <div className=\"component-props\">\n        {props.inputFields.map((inputField, index) => (\n          <div key={index}>\n            <div className=\"contact-option\">\n              <div className=\"contact-icon-container\">\n                <i className=\"fas fa-phone-alt contact-icon\"></i>\n              </div>\n              <div className=\"props-value\">{inputField.inputPhone}</div>\n            </div>\n            <div className=\"contact-option\">\n              <div className=\"contact-icon-container\">\n                <i className=\"fas fa-envelope contact-icon\"></i>\n              </div>\n              <div className=\"props-value\">{inputField.inputMail}</div>\n            </div>\n            <div className=\"contact-option\">\n              <div className=\"contact-icon-container\">\n                <i className=\"fas fa-home contact-icon\"></i>\n              </div>\n              <div className=\"props-value\">{inputField.inputLocation}</div>\n            </div>\n            <div className=\"contact-option\">\n              <div className=\"contact-icon-container\">\n                <i className=\"fab fa-linkedin-in contact-icon\"></i>\n              </div>\n              <div className=\"props-value\">{inputField.inputLinkedIn}</div>\n            </div>\n          </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactInformationDisplayMode;\n","import React from \"react\";\nimport ContactInformationEditMode from \"./ContactInformationEditMode\";\nimport ContactInformationDisplayMode from \"./ContactInformationDisplayMode\";\nimport EditButton from \"./EditButton\";\nimport SubmitButton from \"./SubmitButton\";\nimport \"../styles/ContactInformation.scss\";\n\nclass ContactInformation extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleEditModeClick = this.handleEditModeClick.bind(this);\n    this.handleDisplayModeClick = this.handleDisplayModeClick.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      isInEditMode: true,\n      inputFields: [\n        {\n          inputPhone: \"\",\n          inputMail: \"\",\n          inputLocation: \"\",\n          inputLinkedIn: \"\",\n        },\n      ],\n    };\n  }       \n          \n  handleEditModeClick() {\n    this.setState({isInEditMode: false});\n  }\n\n  handleDisplayModeClick() {\n    this.setState({isInEditMode: true});\n  }\n\n  handleChangeInput = (index, e) => {\n    const values = [...this.state.inputFields];\n    // Change the inputFields object key value to the input value\n    values[index][e.target.name] = e.target.value;\n    this.setState({\n      values\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  render() {\n    const isInEditMode = this.state.isInEditMode;\n    let renderingMode;\n    let button;\n    // show edit mode only when the component and cv are in edit mode\n    if (isInEditMode && this.props.isInCvEditMode) {\n      renderingMode = <ContactInformationEditMode \n        onSubmitFormHandleSubmit={this.handleSubmit}\n        inputFields={this.state.inputFields}\n        onChangeInput={this.handleChangeInput}\n      />\n      button = <SubmitButton onClick={this.handleEditModeClick} />\n    } else {\n      renderingMode = <ContactInformationDisplayMode \n        inputFields={this.state.inputFields}\n      />\n      button = <EditButton onClick={this.handleDisplayModeClick} />\n    }\n\n    return (\n      <div>\n        <div className=\"component-item\">\n          {renderingMode}\n          {this.props.isInCvEditMode && button}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ContactInformation;\n","import React from \"react\";\nimport DeleteButton from \"./DeleteButton\";\nimport AddButton from \"./AddButton\";\n\nconst ProfessionalExperienceEditMode = (props) => {\n  return (\n    <div className=\"component\">\n      <form onSubmit={e => props.onSubmitFormHandleSubmit(e)}>\n        <div className=\"component-header-edit-mode component-header-edit-mode-left\">Professional Experience</div>\n        {props.inputFields.map((inputField, index) => (\n          <div key={index} className=\"component-input-wrapper component-input-wrapper-professionalexperience\">\n            <label htmlFor={\"job-title\"+index}>Job Title</label>\n            <input type=\"text\" name=\"inputJobTitle\" id={\"job-title\"+index} value={inputField.inputJobTitle} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"company\"+index}>Company</label>\n            <input type=\"text\" name=\"inputCompany\" id={\"company\"+index} value={inputField.inputCompany} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"job-location\"+index}>Location</label>\n            <input type=\"text\" name=\"inputJobLocation\" id={\"job-location\"+index} value={inputField.inputJobLocation} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"job-date\"+index}>Job Date</label>\n            <input type=\"text\" name=\"inputJobDate\" id={\"job-date\"+index} value={inputField.inputJobDate} onChange={e => props.onChangeInput(index, e)}></input>\n            <label htmlFor={\"job-description\"+index}>Job Description</label>\n            <textarea name=\"inputJobDescription\" id={\"job-description\"+index} value={inputField.inputJobDescription} onChange={e => props.onChangeInput(index, e)}></textarea>\n            {props.isInCvEditMode \n            && <DeleteButton onClickHandleRemoveFields={e => props.onClickHandleRemoveFields(index, e)} />\n            }\n          </div>\n        ))}\n        {props.isInCvEditMode\n        && <AddButton onClickHandleAddFields={props.onClickHandleAddFields} />\n        }\n      </form>\n    </div>\n  );\n};\n\nexport default ProfessionalExperienceEditMode;\n","import React from \"react\";\n\nconst ProfessionalExperienceDisplayMode = (props) => {\n  return (\n    <div className=\"component component-professionalexperience\">\n      <div className=\"component-header-display-mode component-header-display-mode-left\">Professional Experience</div>\n      <div className=\"component-props\">\n        {props.inputFields.map((inputField, index) => (\n          <div key={index} className=\"professionalexperience-props-values\">\n            <div className=\"props-value props-value-inputjobtitle\">{inputField.inputJobTitle}</div>\n            <div className=\"company-location-date\">\n              <div className=\"props-value props-value-inputcompany\">{inputField.inputCompany}</div>\n              <div className=\"props-value props-value-inputjoblocation\">{inputField.inputJobLocation}</div>\n              <div className=\"props-value props-value-inputjobdate\">{inputField.inputJobDate}</div>\n            </div>\n            <div className=\"props-value props-value-inputJobDescription\">{inputField.inputJobDescription}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfessionalExperienceDisplayMode;\n","import React from \"react\";\nimport ProfessionalExperienceEditMode from \"./ProfessionalExperienceEditMode\";\nimport ProfessionalExperienceDisplayMode from \"./ProfessionalExperienceDisplayMode\";\nimport EditButton from \"./EditButton\";\nimport SubmitButton from \"./SubmitButton\";\nimport \"../styles/ProfessionalExperience.scss\";\n\nclass ProfessionalExperience extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleEditModeClick = this.handleEditModeClick.bind(this);\n    this.handleDisplayModeClick = this.handleDisplayModeClick.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAddFields = this.handleAddFields.bind(this);\n    this.handleRemoveFields = this.handleRemoveFields.bind(this);\n\n    this.state = {\n      isInEditMode: true,\n      inputFields: [\n        {\n          inputJobTitle: \"\",\n          inputCompany: \"\",\n          inputJobLocation: \"\",\n          inputJobDate: \"\",\n          inputJobDescription: \"\",\n        },\n      ],\n    };\n  }       \n          \n  handleEditModeClick() {\n    this.setState({isInEditMode: false});\n  }\n\n  handleDisplayModeClick() {\n    this.setState({isInEditMode: true});\n  }\n\n  handleChangeInput = (index, e) => {\n    const values = [...this.state.inputFields];\n    // Change the inputFields object key value to the input value\n    values[index][e.target.name] = e.target.value;\n    this.setState({\n      values\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  handleAddFields = () => {\n    this.setState({\n      inputFields: this.state.inputFields.concat({inputJobTitle: \"\", inputCompany: \"\", inputJobLocation: \"\", inputJobDate: \"\", inputJobDescription: \"\"})\n    });\n  };\n\n  handleRemoveFields = (index) => {\n    const values = [...this.state.inputFields];\n    values.splice(index, 1);\n    this.setState({\n      inputFields: values\n    });\n  };\n          \n  render() {\n    const isInEditMode = this.state.isInEditMode;\n    let renderingMode;\n    let button;\n    // show edit mode only when the component and cv are in edit mode\n    if (isInEditMode && this.props.isInCvEditMode) {\n      renderingMode = <ProfessionalExperienceEditMode \n        onSubmitFormHandleSubmit={this.handleSubmit}\n        inputFields={this.state.inputFields}\n        onChangeInput={this.handleChangeInput}\n        onClickHandleRemoveFields={this.handleRemoveFields}\n        onClickHandleAddFields={this.handleAddFields}\n        isInCvEditMode = {this.props.isInCvEditMode}\n      />\n      button = <SubmitButton onClick={this.handleEditModeClick} />\n    } else {\n      renderingMode = <ProfessionalExperienceDisplayMode \n        inputFields={this.state.inputFields}\n      />\n      button = <EditButton onClick={this.handleDisplayModeClick} />\n    }\n\n    return (\n      <div>\n        <div className=\"component-item component-item-professionalexperience\">\n          {renderingMode}\n          {this.props.isInCvEditMode && button}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProfessionalExperience;\n","import React from \"react\";\n\nconst ProfilePictureEditMode = (props) => {\n  return (\n    <div className=\"component component-edit-mode-profilepicture\">\n      <form onSubmit={e => props.onSubmitFormHandleSubmit(e)}>\n        <div className=\"component-header-edit-mode\">Picture</div>\n        {props.inputFields.map((inputField, index) => (\n          <div key={index}>\n            <input type=\"file\" id={\"profile-picture\"+index} name=\"inputProfilePicture\" onChange={e => props.onChangeInput(index, e)} />\n          </div>\n        ))}\n      </form>\n    </div>\n  );\n};\n\nexport default ProfilePictureEditMode;\n","import React from \"react\";\n\nconst ProfilePictureDisplayMode = (props) => {\n  return (\n    <div className=\"component\">\n      <div className=\"component-props\">\n        {props.inputFields.map((inputField, index) => (\n          <div key={index} className=\"img-profile-picture-container-wrapper\">\n            <div className=\"props-value img-profile-picture-container\">\n              {/* set the background image to the uploaded image url */}\n              <div className=\"img-profile-picture\" style={{backgroundImage: `url(${inputField.inputProfilePicture})`}}></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePictureDisplayMode;\n","export default __webpack_public_path__ + \"static/media/profile-pic-example.974a2221.svg\";","import React from \"react\";\nimport ProfilePictureEditMode from \"./ProfilePictureEditMode\";\nimport ProfilePictureDisplayMode from \"./ProfilePictureDisplayMode\";\nimport EditButton from \"./EditButton\";\nimport SubmitButton from \"./SubmitButton\";\nimport ExamplePicture from \"../images/profile-pic-example.svg\";\nimport \"../styles/ProfilePicture.scss\";\n\nclass ProfilePicture extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleEditModeClick = this.handleEditModeClick.bind(this);\n    this.handleDisplayModeClick = this.handleDisplayModeClick.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      isInEditMode: true,\n      inputFields: [\n        {\n          // use a default profile picture\n          inputProfilePicture: ExamplePicture,\n        },\n      ],\n    };\n  }       \n          \n  handleEditModeClick() {\n    this.setState({isInEditMode: false});\n  }\n\n  handleDisplayModeClick() {\n    this.setState({isInEditMode: true});\n  }\n\n  handleChangeInput = (index, e) => {\n    const values = [...this.state.inputFields];\n    // Change the inputFields object key value to the input value and create an url for the image file\n    values[index][e.target.name] = URL.createObjectURL(e.target.files[0]);\n    this.setState({\n      values\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  render() {\n    const isInEditMode = this.state.isInEditMode;\n    let renderingMode;\n    let button;\n    // show edit mode only when the component and cv are in edit mode\n    if (isInEditMode && this.props.isInCvEditMode) {\n      renderingMode = <ProfilePictureEditMode \n        onSubmitFormHandleSubmit={this.handleSubmit}\n        inputFields={this.state.inputFields}\n        onChangeInput={this.handleChangeInput}\n      />\n      button = <SubmitButton onClick={this.handleEditModeClick} />\n    } else {\n      renderingMode = <ProfilePictureDisplayMode\n        inputFields={this.state.inputFields}\n      />\n      button = <EditButton onClick={this.handleDisplayModeClick} />\n    }\n\n    return (\n      <div>\n        <div className=\"component-item\">\n          {renderingMode}\n          {this.props.isInCvEditMode && button}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProfilePicture;\n","import React from \"react\";\nimport \"../styles/ToggleButton.scss\";\n\nconst ToggleButton = (props) => {\n  return (\n    <label className=\"switch\">\n      <input type=\"checkbox\" onChange={props.changeToggleButtonState}/>\n      <span className=\"slider rounded\"></span>\n    </label>\n  )\n}\n\nexport default ToggleButton;\n","import React from \"react\";\nimport ToggleButton from \"./ToggleButton\";\nimport \"../styles/ToggleButtonText.scss\";\n\nconst ToggleButtonText = (props) => {\n  return (\n    <div className=\"toggle-button-text\">\n      <div className=\"toggle-button-text-box toggle-button-text-box-edit\">\n        Edit\n      </div>\n      <div className=\"toggle-button-text-box\">\n        <ToggleButton changeToggleButtonState={props.changeToggleButtonState}/>\n      </div>\n      <div className=\"toggle-button-text-box toggle-button-text-box-preview\">\n        Preview\n      </div>\n    </div>\n  )\n}\n\nexport default ToggleButtonText;\n","import React from \"react\";\nimport \"../styles/PrintCvButton.scss\";\n\nconst PrintCvButton = (props) => {\n  return (\n    <i className=\"fas fa-print print-icon\" onClick={props.printCv}></i>\n  )\n}\n\nexport default PrintCvButton;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport NameTitle from \"./components/NameTitle\";\nimport ProfileDescription from \"./components/ProfileDescription\";\nimport Education from \"./components/Education\";\nimport Expertise from \"./components/Expertise\";\nimport ContactInformation from \"./components/ContactInformation\";\nimport ProfessionalExperience from \"./components/ProfessionalExperience\";\nimport ProfilePicture from \"./components/ProfilePicture\";\nimport ToggleButtonText from \"./components/ToggleButtonText\";\nimport PrintCvButton from \"./components/PrintCvButton\";\nimport './styles/App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCvEditModeClick = this.handleCvEditModeClick.bind(this);\n    this.handleCvDisplayModeClick = this.handleCvDisplayModeClick.bind(this);\n    this.changeToggleButtonState = this.changeToggleButtonState.bind(this);\n    this.printCv = this.printCv.bind(this);\n\n    this.state = {\n      isInCvEditMode: true,\n      isToggled: false,\n    };\n  }\n\n  handleCvEditModeClick() {\n    this.setState({isInCvEditMode: false});\n  }\n\n  handleCvDisplayModeClick() {\n    this.setState({isInCvEditMode: true});\n  }\n\n  changeToggleButtonState() {\n    this.setState({isInCvEditMode: !this.state.isInCvEditMode});\n  }\n\n  printCv() {\n    // Hiding the submit and edit buttons when printing\n    if(this.state.isInCvEditMode) {\n      // wait untill the page is in preview mode, print the cv and turn back to the original edit mode\n      const myPromise = new Promise((resolve, reject) => {\n        // switch to preview mode for printing\n        resolve(this.handleCvEditModeClick());\n      });\n      \n      myPromise.then(()=> {\n        // print the cv with print page settings\n        window.print();\n      }).then(() => {\n        // switch back to original edit mode after printing\n        this.handleCvDisplayModeClick();\n      })\n\n      // // async/await version\n      // let a = () => {\n      //   this.handleCvEditModeClick();\n      // }\n      // let b = () => {\n      //   this.handleCvDisplayModeClick();\n      // }\n      // async function setToPreviewMode() {\n      //   a();\n      // }\n      // async function printMeCv() {\n      //   await setToPreviewMode();\n      //   window.print();\n      // }\n      // async function SetToEditMode() {\n      //   await printMeCv();\n      //   b();\n      // }\n      // SetToEditMode();\n\n\n      // setTimeout version\n      // this.setState({isInCvEditMode: false});\n      // // window.print();\n      // setTimeout(function(){ window.print(); }, 200);\n      // // this.setState({isInCvEditMode: true});\n      // setTimeout(() => { this.setState({isInCvEditMode: true}); }, 300);\n  \n    } else {\n      window.print();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"toggle-button-text-container\">\n          <ToggleButtonText changeToggleButtonState={this.changeToggleButtonState}/>\n        </div>\n        <div className=\"print-button-container\">\n          <PrintCvButton printCv={this.printCv} />\n        </div>\n        <div className=\"components-wrapper\">\n          <div className=\"profile-pic\">\n            <div className=\"profile-avatar\">\n              <ProfilePicture isInCvEditMode={this.state.isInCvEditMode} />\n            </div>\n          </div>\n          <div className=\"contact\">\n              <div className=\"component-divide-line\"></div>\n              <ContactInformation isInCvEditMode={this.state.isInCvEditMode} />\n          </div>\n          <div className=\"education\">\n            <div className=\"component-divide-line\"></div>\n            <Education isInCvEditMode={this.state.isInCvEditMode} />\n          </div>\n          <div className=\"expertise\">\n            <div className=\"component-divide-line\"></div>\n            <Expertise isInCvEditMode={this.state.isInCvEditMode} />\n          </div>\n          <div className=\"name-function\">\n            <NameTitle isInCvEditMode={this.state.isInCvEditMode} />\n          </div>\n          <div className=\"profile-description\">\n            <div className=\"component-divide-line\"></div>\n            <ProfileDescription isInCvEditMode={this.state.isInCvEditMode} />\n          </div>\n          <div className=\"professional-experience\">\n            <div className=\"component-divide-line\"></div>\n            <ProfessionalExperience isInCvEditMode={this.state.isInCvEditMode} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}